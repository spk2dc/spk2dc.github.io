{"version":3,"sources":["webpack:///./src/components/projectCard.js","webpack:///./src/pages/projects.js"],"names":["props","className","postClass","node","frontmatter","thumbnail","style","backgroundImage","childImageSharp","fluid","src","to","fields","slug","backgroundColor","title","description","ProjectsPage","location","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","postCounter","keywords","map","key","count","query","render"],"mappings":"iKAGe,WAAAA,GAAK,OAClB,yBAAKC,UAAU,gBACb,6BACEA,UAAS,aAAeD,EAAME,UAArB,KACPF,EAAMG,KAAKC,YAAYC,UAAvB,yBAEFC,MACEN,EAAMG,KAAKC,YAAYC,WAAa,CAClCE,gBAAgB,OAAQP,EAAMG,KAAKC,YAAYC,UAAUG,gBAAgBC,MAAMC,IAAhE,MAInB,kBAAC,OAAD,CAAMC,GAAIX,EAAMG,KAAKS,OAAOC,KAAMZ,UAAU,kBAC1C,yBACEA,UAAU,oBACVK,MAAO,CAAEQ,gBAAgB,cAEzB,wBAAIb,UAAU,mBACXD,EAAMG,KAAKC,YAAYW,OAASf,EAAMG,KAAKS,OAAOC,SAM3D,yBAAKZ,UAAU,0BACb,yBAAKA,UAAU,qBACb,kBAAC,OAAD,CAAMU,GAAIX,EAAMG,KAAKS,OAAOC,KAAMZ,UAAU,kBAC1C,wBAAIA,UAAU,eAAeD,EAAMG,KAAKC,YAAYW,QAEtD,2BAAIf,EAAMG,KAAKC,YAAYY,iBCtB7BC,G,oBAAe,SAAC,EAAUC,GAAc,IAAtBC,EAAqB,EAArBA,KAChBC,EAAYD,EAAKE,KAAKC,aAAaP,MACnCQ,EAAQJ,EAAKK,kBAAkBC,MACjCC,EAAc,EAElB,OACE,kBAAC,IAAD,CAAQX,MAAOK,GACb,kBAAC,IAAD,CACEL,MAAM,WACNY,SAAU,CAAC,WAAD,iCAGZ,6BAAS1B,UAAU,uCACjB,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,QAAd,YAEA,yBAAKA,UAAU,aACZsB,EAAMK,KAAI,YAAe,IAAZzB,EAAW,EAAXA,KAEZ,OADAuB,IAEE,kBAAC,EAAD,CACEG,IAAK1B,EAAKS,OAAOC,KACjBiB,MAAOJ,EACPvB,KAAMA,EACND,UAAS,kBAkDZ,mBAAAF,GAAK,OAClB,kBAAC,cAAD,CACE+B,MAzCe,aA0CfC,OAAQ,SAAAb,GAAI,OACV,kBAAC,EAAD,eAAcD,SAAUlB,EAAMkB,SAAUC,KAAMA,GAAUnB,S","file":"component---src-pages-projects-js-63a6e07848adbb954b68.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default props => (\n  <div className=\"project-card\">\n    <article\n      className={`post-card ${props.postClass} ${\n        props.node.frontmatter.thumbnail ? `with-image` : `no-image`\n      }`}\n      style={\n        props.node.frontmatter.thumbnail && {\n          backgroundImage: `url(${props.node.frontmatter.thumbnail.childImageSharp.fluid.src})`,\n        }\n      }\n    >\n      <Link to={props.node.fields.slug} className=\"post-card-link\">\n        <div\n          className=\"post-card-content\"\n          style={{ backgroundColor: `#79aeffc7` }}\n        >\n          <h2 className=\"post-card-title\">\n            {props.node.frontmatter.title || props.node.fields.slug}\n          </h2>\n        </div>\n      </Link>\n    </article>\n\n    <div className=\"project-card-textpanel\">\n      <div className=\"project-card-text\">\n        <Link to={props.node.fields.slug} className=\"post-card-link\">\n          <h4 className=\"text-center\">{props.node.frontmatter.title}</h4>\n        </Link>\n        <p>{props.node.frontmatter.description}</p>\n      </div>\n    </div>\n  </div>\n)\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport ProjectCard from \"../components/projectCard\"\n\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n\nconst ProjectsPage = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  let postCounter = 0\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title=\"Projects\"\n        keywords={[`projects`, `gatsby`, `javascript`, `react`]}\n      />\n\n      <article className=\"post-content page-template no-image\">\n        <div className=\"post-content-body\">\n          <h2 className=\"mb-5\">PROJECTS</h2>\n\n          <div className=\"post-feed\">\n            {posts.map(({ node }) => {\n              postCounter++\n              return (\n                <ProjectCard\n                  key={node.fields.slug}\n                  count={postCounter}\n                  node={node}\n                  postClass={`post`}\n                />\n              )\n            })}\n          </div>\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\nconst projectsQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { category: { eq: \"project_post\" } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: 1000\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            category\n            description\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={projectsQuery}\n    render={data => (\n      <ProjectsPage location={props.location} data={data} {...props} />\n    )}\n  />\n)\n"],"sourceRoot":""}