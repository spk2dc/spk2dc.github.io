{"version":3,"sources":["webpack:///./src/components/postCard.js","webpack:///./src/pages/projects.js"],"names":["props","className","count","postClass","node","frontmatter","thumbnail","style","backgroundImage","childImageSharp","fluid","src","to","fields","slug","title","ProjectsPage","location","data","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","postCounter","keywords","map","key","query","render"],"mappings":"8KAGe,WAAAA,GAAK,OAClB,6BACEC,UAAS,cAAeD,EAAME,MAAQ,GAAM,GAApB,mBAAf,IACPF,EAAMG,UADC,KAELH,EAAMI,KAAKC,YAAYC,UAAvB,yBACJC,MACEP,EAAMI,KAAKC,YAAYC,WAAa,CAClCE,gBAAgB,OACdR,EAAMI,KAAKC,YAAYC,UAAUG,gBAAgBC,MAAMC,IAD1C,MAMnB,kBAAC,OAAD,CAAMC,GAAIZ,EAAMI,KAAKS,OAAOC,KAAMb,UAAU,kBAC1C,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,mBACXD,EAAMI,KAAKC,YAAYU,OAASf,EAAMI,KAAKS,OAAOC,UCRvDE,G,oBAAe,SAAC,EAAUC,GAAc,IAAtBC,EAAqB,EAArBA,KAChBC,EAAYD,EAAKE,KAAKC,aAAaN,MACnCO,EAAQJ,EAAKK,kBAAkBC,MACjCC,EAAc,EAElB,OACE,kBAAC,IAAD,CAAQV,MAAOI,GACb,kBAAC,IAAD,CACEJ,MAAM,WACNW,SAAU,CAAC,WAAD,iCAGZ,6BAASzB,UAAU,uCACjB,yBAAKA,UAAU,qBACb,wBAAIA,UAAU,QAAd,YAEA,yBAAKA,UAAU,aACZqB,EAAMK,KAAI,YAAe,IAAZvB,EAAW,EAAXA,KAEZ,OADAqB,IAEE,kBAAC,EAAD,CACEG,IAAKxB,EAAKS,OAAOC,KACjBZ,MAAOuB,EACPrB,KAAMA,EACND,UAAS,kBA6CZ,mBAAAH,GAAK,OAClB,kBAAC,cAAD,CACE6B,MApCe,aAqCfC,OAAQ,SAAAZ,GAAI,OACV,kBAAC,EAAD,eAAcD,SAAUjB,EAAMiB,SAAUC,KAAMA,GAAUlB,S","file":"component---src-pages-projects-js-1492544aa512d389e9a7.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default props => (\n  <article\n    className={`post-card ${props.count % 3 === 0 && `post-card-large`} ${\n      props.postClass\n    } ${props.node.frontmatter.thumbnail ? `with-image` : `no-image`}`}\n    style={\n      props.node.frontmatter.thumbnail && {\n        backgroundImage: `url(${\n          props.node.frontmatter.thumbnail.childImageSharp.fluid.src\n        })`,\n      }\n    }\n  >\n    <Link to={props.node.fields.slug} className=\"post-card-link\">\n      <div className=\"post-card-content\">\n        <h2 className=\"post-card-title\">\n          {props.node.frontmatter.title || props.node.fields.slug}\n        </h2>\n      </div>\n    </Link>\n  </article>\n)\n","import React from \"react\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostCard from \"../components/postCard\"\n\nimport \"../utils/normalize.css\"\nimport \"../utils/css/screen.css\"\n\nconst ProjectsPage = ({ data }, location) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  let postCounter = 0\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title=\"Projects\"\n        keywords={[`projects`, `gatsby`, `javascript`, `react`]}\n      />\n\n      <article className=\"post-content page-template no-image\">\n        <div className=\"post-content-body\">\n          <h2 className=\"mb-5\">PROJECTS</h2>\n\n          <div className=\"post-feed\">\n            {posts.map(({ node }) => {\n              postCounter++\n              return (\n                <PostCard\n                  key={node.fields.slug}\n                  count={postCounter}\n                  node={node}\n                  postClass={`post`}\n                />\n              )\n            })}\n          </div>\n        </div>\n      </article>\n    </Layout>\n  )\n}\n\nconst projectsQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            thumbnail {\n              childImageSharp {\n                fluid(maxWidth: 1360) {\n                  ...GatsbyImageSharpFluid\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default props => (\n  <StaticQuery\n    query={projectsQuery}\n    render={data => (\n      <ProjectsPage location={props.location} data={data} {...props} />\n    )}\n  />\n)\n"],"sourceRoot":""}